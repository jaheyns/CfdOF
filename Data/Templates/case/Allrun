#!/bin/bash

runParallel()
{
    nproc="$1"
    shift
    exe="$(which $1)"
    sol=$(basename -- "$1")
    sol="${sol%.*}"
    shift
    if [ -f log."$sol" ]; then rm log."$sol"; fi
    export OMPI_MCA_btl_vader_single_copy_mechanism=none  # Workaround for open-mpi/docker bug
%{%(system/hostFileRequired%)
%:False
    mpiexec -np $nproc "$exe" -parallel "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
%:True
    mpiexec --hostfile %(system/hostFileName%) -np $nproc "$exe" -parallel "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
%}
    err=$?
    if [ ! $err -eq 0 ]; then exit $err; fi
}

runCommand()
{
    sol=$(basename -- "$1")
    sol="${sol%.*}"
    if [ -f log."$sol" ]; then rm log."$sol"; fi
    "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
    err=$?
    if [ ! $err -eq 0 ]; then exit $err; fi
}

# Unset and source bashrc
%{%(system/FoamRuntime%)
%:Posix
FOAMDIR="%(system/TranslatedFoamPath%)"
%}
if [ ! -z "$FOAMDIR" ]
then
    source "$FOAMDIR/etc/config.sh/unset" 2> /dev/null
    source "$FOAMDIR/etc/bashrc"
fi

# Copy mesh from mesh case dir if available
MESHDIR="%(meshDir%)"
if [ -f "$MESHDIR"/constant/polyMesh/faces ]
then
    rm -rf constant/polyMesh
    cp -r "$MESHDIR"/constant/polyMesh constant/polyMesh
elif [ ! -f constant/polyMesh/faces ]
then
    echo "Fatal error: Unable to find mesh in directory $MESHDIR" 1>&2
    exit 1
fi

# Detect available turbulence lib
if [ -f "$FOAM_LIBBIN/libmomentumTransportModels.so" ] || [ -f "$FOAM_LIBBIN/libmomentumTransportModels.dll" ]
then
    echo \"libmomentumTransportModels.so\" > system/turbulenceLib
else
    echo \"libturbulenceModels.so\" > system/turbulenceLib
fi

%{%(dynamicMeshEnabled%)
%:True
mkdir -p 0/include
# Detect availability of 'internal' patch type
if which foamInfo > /dev/null && foamInfo internalFvPatchField > /dev/null 2>&1
then
    echo "type internal;" > 0/include/helperPatchFieldType
    echo "type internal;" > system/helperPatchType
else
    echo "type fixedValue;" > 0/include/helperPatchFieldType
    echo "type patch;" > system/helperPatchType
fi

%}
%{%(scalarTransportFunctionsEnabled%)
%:True
# Enable fvOption source for scalar transport in OpenFOAM v10+
if [ -z ${FOAM_API+x} ] && [ "$WM_PROJECT_VERSION" -ge 10 ]
then
    cp system/fvOptions_OF10 system/fvOptions
fi

%}
# Update patch name and type
runCommand createPatch -overwrite

%{%(zonesPresent%)
%:True
# Set cell zones contained inside the .stl surfaces
runCommand topoSet -dict system/topoSetZonesDict

%}
%{%(initialisationZonesPresent%)
%:True
# Set internal fields according to setFieldsDict
runCommand setFields

%}
%{%(bafflesPresent%)
%:True
%{%(createPatchesFromSnappyBaffles%)
%:False
# Combine mesh faceZones
runCommand topoSet -dict system/topoSetBafflesDict

# Creating baffles
runCommand createBaffles -overwrite

%}
%}
%{%(runChangeDictionary%)
%:True
# Update patch name and type
runCommand changeDictionary

%}

%{%(initialValues/PotentialFlow%)
%:True
%{%(solver/SolverName%)
%:buoyantSimpleFoam buoyantPimpleFoam interFoam multiphaseInterFoam
PNAME=p_rgh
%:default
PNAME=p
%}

%}
%{%(solver/Parallel%)
%:True
# Parallel decomposition
if [ ! -d processor0 ]
then
    runCommand decomposePar -force
fi

# Pick up number of parallel processes
NPROC=$(foamDictionary -entry "numberOfSubdomains" -value system/decomposeParDict)

%{%(dynamicMeshEnabled%)
%:False
# Mesh renumbering
runParallel $NPROC renumberMesh -overwrite
%:True
# Mesh renumbering does not work in Foundation with dynamic mesh
%}

%{%(initialValues/PotentialFlow%)
%:True
# Initialise flow
%{%(bafflesPresent%)
%:True
# Baffle BC does not work with potentialFoam; do not initialise p
runParallel $NPROC potentialFoam -initialiseUBCs -pName $PNAME
%:default
%{%(initialValues/PotentialFlowP%)
%:True
runParallel $NPROC potentialFoam -initialiseUBCs -pName $PNAME -writep
%:default
runParallel $NPROC potentialFoam -initialiseUBCs -pName $PNAME
%}
%}
%{%(solver/SolverName%)
%:buoyantSimpleFoam buoyantPimpleFoam interFoam multiphaseInterFoam
# Remove phi with wrong units
rm -f processor*/0/phi
%}

%}
# Run application in parallel
runParallel $NPROC %(solver/SolverName%)
%:False
%{%(dynamicMeshEnabled%)
%:False
# Mesh renumbering
runCommand renumberMesh -overwrite
%:True
# Mesh renumbering does not currently work in Foundation with dynamic mesh
# runCommand renumberMesh -overwrite
%}

%{%(initialValues/PotentialFlow%)
%:True
# Initialise flow
%{%(bafflesPresent%)
%:True
# Baffle BC does not work with potentialFoam; do not initialise p
runCommand potentialFoam -initialiseUBCs -pName $PNAME
%:default
%{%(initialValues/PotentialFlowP%)
%:True
runCommand potentialFoam -initialiseUBCs -pName $PNAME -writep
%:default
runCommand potentialFoam -initialiseUBCs -pName $PNAME
%}
%}
%{%(solver/SolverName%)
%:buoyantSimpleFoam buoyantPimpleFoam interFoam multiphaseInterFoam
# Remove phi with wrong units
rm -f 0/phi
%}

%}
# Run application
runCommand %(solver/SolverName%)
%}

