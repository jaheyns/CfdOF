%{%(physics/Turbulence%)
%:RANS DES LES
%[_header%]
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      nut;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -1 0 0 0 0];

%{%(physics/TurbulenceModel%)
%:kEqn Smagorinsky WALE
internalField   uniform %(initialValues/nut%);
%:default
internalField   uniform 0;
%}

boundaryField
{
%[0/_boundary_MMR_calculated%]

%{%(boundaries%)
%{%(boundaries/%(0%)/BoundaryType%)
%:inlet
%{%(physics/TurbulenceModel%)
%:kEqn
    %(0%)
    {
        type        fixedValue;
        value       uniform %(boundaries/%(0%)/kEqnTurbulentViscosity%);
    }
%:Smagorinsky WALE
    %(0%)
    {
        type        fixedValue;
        value       uniform %(boundaries/%(0%)/TurbulentViscosity%);
    }
%:default
    %(0%)
    {
        type        calculated;
        value       $internalField;
    }
%}
%:empty
%[0/_boundary_empty%]
%:wall
%{%(boundaries/%(0%)/BoundarySubType%)
%:fixedWall translatingWall rotatingWall partialSlipWall
    %(0%)
    {
%{%(physics/TurbulenceModel%)
%:SpalartAllmaras SpalartAllmarasDES SpalartAllmarasDDES SpalartAllmarasIDDES Smagorinsky
        type        nutUSpaldingWallFunction;
%:default
        type        nutkWallFunction;
%}
        value       uniform 0;
    }
%:slipWall
%[0/_boundary_zeroGradient%]
%:roughWall
    %(0%)
    {
%{%(physics/TurbulenceModel%)
%:SpalartAllmaras SpalartAllmarasDES SpalartAllmarasDDES SpalartAllmarasIDDES Smagorinsky
        type        nutURoughWallFunction;
%:default
        type        nutkRoughWallFunction;
%}
        Ks          uniform %(boundaries/%(0%)/RoughnessHeight%);
        Cs          uniform %(boundaries/%(0%)/RoughnessConstant%);
        value       uniform 0;
    }
%}
%:constraint
%[0/_boundary_constraint%]
%:baffle
%[0/_boundary_cyclic_baffle%]
%:default
%[0/_boundary_calculated%]
%}

%}
%[0/_boundary_redistributeHelper%]
}

// ************************************************************************* //
%}
