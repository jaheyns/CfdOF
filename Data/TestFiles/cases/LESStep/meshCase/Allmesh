#!/bin/bash

runParallel()
{
    nproc="$1"
    shift
    exe="$(which $1)"
    sol=$(basename -- "$1")
    sol="${sol%.*}"
    shift
    if [ -f log."$sol" ]; then rm log."$sol"; fi
    mpiexec -np $nproc "$exe" -parallel "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
    err=$?
    if [ ! $err -eq 0 ]; then exit $err; fi
}

runCommand()
{
    sol=$(basename -- "$1")
    sol="${sol%.*}"
    if [ -f log."$sol" ]; then rm log."$sol"; fi
    "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
    err=$?
    if [ ! $err -eq 0 ]; then exit $err; fi
}

GMSH_EXE='/usr/local/bin/gmsh'
export NTHREADS=$(nproc)
runCommand "$GMSH_EXE" -nt $NTHREADS - "gmsh/Pad_Geometry.geo"

# Unset and source bashrc
FOAMDIR="/usr/lib/openfoam/openfoam2206"
if [ ! -z "$FOAMDIR" ]
then
    source "$FOAMDIR/etc/config.sh/unset" 2> /dev/null
    source "$FOAMDIR/etc/bashrc"
fi

runCommand gmshToFoam "gmsh/Pad_Geometry.msh"

# Convert to polyhedra
runCommand polyDualMesh 10 -concaveMultiCells -overwrite

if [ -z $FOAM_API ] && ( [ $WM_PROJECT_VERSION == "dev" ] || [ $WM_PROJECT_VERSION -ge 9 ] )
then
    runCommand transformPoints "scale=(0.001 0.001 0.001)"
else
    runCommand transformPoints -scale "(0.001 0.001 0.001)"
fi

# Extract surface mesh and convert to mm for visualisation in FreeCAD
if [ ! -z $FOAM_API ] && [ $FOAM_API -ge 1906 ] || [ $WM_PROJECT_VERSION == "v1906" ]
then
    runCommand surfaceMeshExtract mesh_outside.stl
else
    runCommand surfaceMeshTriangulate mesh_outside.stl
fi
if [ -z $FOAM_API ] && ( [ $WM_PROJECT_VERSION == "dev" ] || [ $WM_PROJECT_VERSION -ge 9 ] )
then
    runCommand surfaceTransformPoints "scale=(1000 1000 1000)" mesh_outside.stl mesh_outside.stl
else
    runCommand surfaceTransformPoints -scale "(1000 1000 1000)" mesh_outside.stl mesh_outside.stl
fi
